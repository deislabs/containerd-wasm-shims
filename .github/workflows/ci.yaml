name: ci
on:
  pull_request:
    branches: [main]
env:
  CARGO_TERM_COLOR: always
jobs:
  rustfmt:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: Swatinem/rust-cache@v2
        with:
          workspaces: |
            "containerd-shim-*-v1 -> target"
      - name: "Install dependencies"
        run: |
          sudo apt-get update
          sudo apt-get install -y protobuf-compiler libseccomp-dev
      - name: fmt
        run: |
          make fmt
  build-wasm-images:
    uses: ./.github/workflows/docker-build-push.yaml
    with:
      test: true
  build:
    uses: ./.github/workflows/build.yaml
  test:
    needs: build
    runs-on: ubuntu-latest
    env:
      ARCH: x86_64
    steps:
      - uses: actions/checkout@v3
      - uses: actions/download-artifact@v3
      - name: Extract containerd-wasm-shims-v1-linux-${{ env.ARCH }}
        run: |
          mkdir -p ./bin
          for f in containerd-wasm-shims-v1-*-linux-${{ env.ARCH }}/containerd-wasm-shims-v1-*-linux-${{ env.ARCH }}.tar.gz
            do tar -xzf "$f" -C ./bin
          done
      - name: install k3d
        run: make install-k3d
        working-directory: ./deployments/k3d
      - name: run integration tests
        run: BIN_DIR="./bin" make integration-tests
      - name: clean up k3d
        if: always()
        run: make test/clean
