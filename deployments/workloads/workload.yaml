apiVersion: apps/v1
kind: Deployment
metadata:
  name: wasm-slight
spec:
  replicas: 1
  selector:
    matchLabels:
      app: wasm-slight
  template:
    metadata:
      labels:
        app: wasm-slight
    spec:
      runtimeClassName: wasmtime-slight
      containers:
        - name: slight-hello
          image: ghcr.io/deislabs/containerd-wasm-shims/examples/slight-rust-hello:v0.7.0
          command: ["/"]
          resources: # limit the resources to 128Mi of memory and 100m of CPU
            limits:
              cpu: 100m
              memory: 128Mi
            requests:
              cpu: 100m
              memory: 128Mi
---
apiVersion: v1
kind: Service
metadata:
  name: wasm-slight
spec:
  ports:
    - protocol: TCP
      port: 80
      targetPort: 3000
  selector:
    app: wasm-slight
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: wasm-spin
spec:
  replicas: 1
  selector:
    matchLabels:
      app: wasm-spin
  template:
    metadata:
      labels:
        app: wasm-spin
    spec:
      runtimeClassName: wasmtime-spin
      containers:
        - name: spin-hello
          image: ghcr.io/deislabs/containerd-wasm-shims/examples/spin-rust-hello:v0.7.0
          command: ["/"]
          resources: # limit the resources to 128Mi of memory and 100m of CPU
            limits:
              cpu: 100m
              memory: 128Mi
            requests:
              cpu: 100m
              memory: 128Mi
---
apiVersion: v1
kind: Service
metadata:
  name: wasm-spin
spec:
  ports:
    - protocol: TCP
      port: 80
      targetPort: 80
  selector:
    app: wasm-spin
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: wasm-wws
spec:
  replicas: 1
  selector:
    matchLabels:
      app: wasm-wws
  template:
    metadata:
      labels:
        app: wasm-wws
    spec:
      runtimeClassName: wasmtime-wws
      containers:
        - name: wws-hello
          imagePullPolicy: Never
          image: ghcr.io/deislabs/containerd-wasm-shims/examples/wws-js-hello:v0.7.0
          command: ["/"]
---
apiVersion: v1
kind: Service
metadata:
  name: wasm-wws
spec:
  ports:
    - protocol: TCP
      port: 80
      targetPort: 3000
  selector:
    app: wasm-wws
---
# Middleware
# Strip prefix /spin
apiVersion: traefik.containo.us/v1alpha1
kind: Middleware
metadata:
  name: strip-prefix
spec:
  stripPrefix:
    forceSlash: false
    prefixes:
      - /spin
      - /slight
      - /wws
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: wasm-ingress
  annotations:
    ingress.kubernetes.io/ssl-redirect: "false"
    kubernetes.io/ingress.class: traefik
    traefik.ingress.kubernetes.io/router.middlewares: default-strip-prefix@kubernetescrd
spec:
  rules:
    - http:
        paths:
          - path: /spin
            pathType: Prefix
            backend:
              service:
                name: wasm-spin
                port:
                  number: 80
          - path: /slight
            pathType: Prefix
            backend:
              service:
                name: wasm-slight
                port:
                  number: 80
          - path: /wws
            pathType: Prefix
            backend:
              service:
                name: wasm-wws
                port:
                  number: 80